/home/rizar/Dist/theano/theano/scan_module/scan_perform_ext.py:117: RuntimeWarning: numpy.ndarray size changed, may indicate binary incompatibility
  from scan_perform.scan_perform import *
Function profiling
==================
  Message: ./demo.py:61
  Time in 5 calls to Function.__call__: 3.145212e+01s
  Time in Function.fn.__call__: 3.133498e+01s (99.628%)
  Time in thunks: 3.133439e+01s (99.626%)
  Total compile time: 3.319740e+00s
    Number of Apply nodes: 54
    Theano Optimizer time: 2.803508e+00s
       Theano validate time: 1.453924e-02s
    Theano Linker time (includes C, CUDA code generation/compiling): 5.054960e-01s

Class
---
<% time> <sum %> <apply time> <time per call> <type> <#call> <#apply> <Class name>
  99.6%    99.6%      31.217s       3.12e+00s     Py      10       2   theano.scan_module.scan_op.Scan
   0.3%    99.9%       0.089s       3.58e-03s     C       25       5   theano.tensor.basic.Alloc
   0.1%   100.0%       0.027s       2.73e-03s     C       10       2   theano.tensor.subtensor.IncSubtensor
   0.0%   100.0%       0.000s       3.85e-06s     C       60      12   theano.tensor.elemwise.Elemwise
   0.0%   100.0%       0.000s       2.84e-06s     C       50      10   theano.tensor.subtensor.Subtensor
   0.0%   100.0%       0.000s       2.34e-06s     C       35       7   theano.compile.ops.Shape_i
   0.0%   100.0%       0.000s       2.41e-06s     C       30       6   theano.tensor.elemwise.DimShuffle
   0.0%   100.0%       0.000s       2.13e-06s     C       15       3   theano.tensor.basic.Reshape
   0.0%   100.0%       0.000s       1.34e-06s     C       20       4   theano.tensor.basic.ScalarFromTensor
   0.0%   100.0%       0.000s       1.03e-06s     C       15       3   theano.compile.ops.Rebroadcast
   ... (remaining 0 Classes account for   0.00%(0.00s) of the runtime)

Ops
---
<% time> <sum %> <apply time> <time per call> <type> <#call> <#apply> <Op name>
  72.4%    72.4%      22.698s       4.54e+00s     Py       5        1   forall_inplace,cpu,grad_of_layer_rec}
  27.2%    99.6%       8.519s       1.70e+00s     Py       5        1   for{cpu,layer_rec}
   0.3%    99.9%       0.089s       3.58e-03s     C       25        5   Alloc
   0.1%   100.0%       0.027s       5.34e-03s     C        5        1   IncSubtensor{InplaceInc;int64::}
   0.0%   100.0%       0.001s       1.10e-04s     C        5        1   IncSubtensor{InplaceInc;int64}
   0.0%   100.0%       0.000s       8.84e-06s     C       15        3   Elemwise{sub,no_inplace}
   0.0%   100.0%       0.000s       3.08e-06s     C       20        4   Shape_i{0}
   0.0%   100.0%       0.000s       2.28e-06s     C       25        5   Subtensor{int64:int64:int64}
   0.0%   100.0%       0.000s       3.12e-06s     C       15        3   InplaceDimShuffle{1,0}
   0.0%   100.0%       0.000s       6.72e-06s     C        5        1   Subtensor{::int64}
   0.0%   100.0%       0.000s       2.13e-06s     C       15        3   Reshape{3}
   0.0%   100.0%       0.000s       1.34e-06s     C       20        4   ScalarFromTensor
   0.0%   100.0%       0.000s       5.20e-06s     C        5        1   Subtensor{int64:int64:int8}
   0.0%   100.0%       0.000s       1.68e-06s     C       15        3   Subtensor{int64}
   0.0%   100.0%       0.000s       1.37e-06s     C       15        3   Shape_i{1}
   0.0%   100.0%       0.000s       1.81e-06s     C       10        2   InplaceDimShuffle{0,1,x}
   0.0%   100.0%       0.000s       1.03e-06s     C       15        3   Rebroadcast{0}
   0.0%   100.0%       0.000s       3.00e-06s     C        5        1   Elemwise{Composite{[Switch(LT(*1 -> Composite{[Switch(LT(i0, i1), i1, i0)]}(Composite{[Switch(LT(i0, i1), i2, i0)]}(Composite{[sub(i0, Switch(LT(i1, i2), i2, i1))]}(i0, Composite{[add(i0, int_div(i1, i0))]}(i1, *2 -> add(i2, i0)), i3), i3, *2), i3), i4), *1, i4)]}}
   0.0%   100.0%       0.000s       2.81e-06s     C        5        1   Elemwise{Composite{[Switch(LT(i0, i1), i1, i0)]}}
   0.0%   100.0%       0.000s       1.36e-06s     C       10        2   Elemwise{le,no_inplace}
   ... (remaining 6 Ops account for   0.00%(0.00s) of the runtime)

Apply
------
<% time> <sum %> <apply time> <time per call> <#call> <id> <Apply name>
  72.4%    72.4%      22.698s       4.54e+00s      5    50   forall_inplace,cpu,grad_of_layer_rec}(TensorConstant{50}, InplaceDimShuffle{0,2,1}.0, InplaceDimShuffle{0,1,x}.0, Elemwise{sub,no_inplace}.0, Subtensor{int64:int64:int64}.0, Subtensor{int64:int64:int64}.0, Subtensor{int64:int64:int64}.0, Subtensor{int64:int64:int64}.0, Subtensor{::int64}.0, Rebroadcast{0}.0, Rebroadcast{0}.0, Rebroadcast{0}.0, G_rec, R_rec, W_rec, InplaceDimShuffle{1,0}.0, InplaceDimShuffle{1,0}.0, InplaceDimShuffle{1,0}.0)
  27.2%    99.6%       8.519s       1.70e+00s      5    47   for{cpu,layer_rec}(TensorConstant{50}, InplaceDimShuffle{0,1,x}.0, Elemwise{sub,no_inplace}.0, Reshape{3}.0, Reshape{3}.0, Reshape{3}.0, TensorConstant{(51, 80, 1..00) of 0.0}, G_rec, R_rec, W_rec)
   0.1%    99.7%       0.038s       7.65e-03s      5     9   Alloc(TensorConstant{(1, 1, 1) of 0.0}, TensorConstant{50}, TensorConstant{80}, TensorConstant{1000})
   0.1%    99.9%       0.033s       6.67e-03s      5    10   Alloc(TensorConstant{(1, 1, 1) of 0.0}, TensorConstant{51}, TensorConstant{80}, TensorConstant{1000})
   0.1%    99.9%       0.027s       5.34e-03s      5    26   IncSubtensor{InplaceInc;int64::}(Alloc.0, IncSubtensor{InplaceInc;int64}.0, Constant{1})
   0.0%   100.0%       0.009s       1.86e-03s      5    15   Alloc(TensorConstant{0.0}, TensorConstant{1}, Shape_i{0}.0, Shape_i{1}.0)
   0.0%   100.0%       0.004s       8.82e-04s      5    17   Alloc(TensorConstant{0.0}, TensorConstant{1}, Shape_i{0}.0, Shape_i{1}.0)
   0.0%   100.0%       0.004s       8.18e-04s      5    16   Alloc(TensorConstant{0.0}, TensorConstant{1}, Shape_i{0}.0, Shape_i{1}.0)
   0.0%   100.0%       0.001s       1.10e-04s      5    18   IncSubtensor{InplaceInc;int64}(Alloc.0, TensorConstant{(80, 1000) of 1.0}, Constant{-1})
   0.0%   100.0%       0.000s       1.24e-05s      5    45   Elemwise{sub,no_inplace}(TensorConstant{(1, 1, 1) of 1.0}, InplaceDimShuffle{0,1,x}.0)
   0.0%   100.0%       0.000s       1.20e-05s      5    46   Elemwise{sub,no_inplace}(TensorConstant{(1, 1, 1) of 1.0}, InplaceDimShuffle{0,1,x}.0)
   0.0%   100.0%       0.000s       6.72e-06s      5    29   Subtensor{::int64}(IncSubtensor{InplaceInc;int64::}.0, Constant{-1})
   0.0%   100.0%       0.000s       6.15e-06s      5     6   InplaceDimShuffle{1,0}(R_rec)
   0.0%   100.0%       0.000s       5.20e-06s      5    42   Subtensor{int64:int64:int8}(mask, ScalarFromTensor.0, ScalarFromTensor.0, Constant{1})
   0.0%   100.0%       0.000s       4.58e-06s      5    48   Subtensor{int64:int64:int64}(for{cpu,layer_rec}.0, Constant{49}, Constant{-52}, Constant{-1})
   0.0%   100.0%       0.000s       3.72e-06s      5     8   Shape_i{0}(R_rec)
   0.0%   100.0%       0.000s       3.39e-06s      5    53   Subtensor{int64}(forall_inplace,cpu,grad_of_layer_rec}.3, Constant{0})
   0.0%   100.0%       0.000s       3.34e-06s      5    14   Shape_i{0}(mask)
   0.0%   100.0%       0.000s       3.24e-06s      5    13   Reshape{3}(x, TensorConstant{[  50   80 1000]})
   0.0%   100.0%       0.000s       3.00e-06s      5    30   Elemwise{Composite{[Switch(LT(*1 -> Composite{[Switch(LT(i0, i1), i1, i0)]}(Composite{[Switch(LT(i0, i1), i2, i0)]}(Composite{[sub(i0, Switch(LT(i1, i2), i2, i1))]}(i0, Composite{[add(i0, int_div(i1, i0))]}(i1, *2 -> add(i2, i0)), i3), i3, *2), i3), i4), *1, i4)]}}(Elemwise{Composite{[Switch(LT(i0, i1), i0, i1)]}}.0, TensorConstant{1}, TensorConstant{-1}, TensorConstant{0}, Elemwise{Composite{[Switch(LT(i0, i1), i1, i0)]}}.0)
   ... (remaining 34 Apply instances account for 0.00%(0.00s) of the runtime)


Scan Op profiling ( layer_rec )
==================
  Message: None
  Time in 5 calls of the op (for a total of 250 steps) 8.518717e+00s

  Total time spent in calling the VM 8.442818e+00s (99.109%)
  Total overhead (computing slices..) 7.589889e-02s (0.891%)

Class
---
<% time> <sum %> <apply time> <time per call> <type> <#call> <#apply> <Class name>
  75.9%    75.9%       6.398s       8.53e-03s     C      750       3   theano.tensor.blas.Gemm
  24.1%   100.0%       2.036s       4.07e-03s     C      500       2   theano.tensor.elemwise.Elemwise
   ... (remaining 0 Classes account for   0.00%(0.00s) of the runtime)

Ops
---
<% time> <sum %> <apply time> <time per call> <type> <#call> <#apply> <Op name>
  75.9%    75.9%       6.398s       8.53e-03s     C      750        3   Gemm{no_inplace}
  17.2%    93.0%       1.447s       5.79e-03s     C      250        1   Elemwise{Composite{[add(mul(i0, add(mul(*1 -> scalar_sigmoid(i1), tanh(i2)), mul(sub(i3, *1), i4))), mul(i5, i4))]}}[(0, 1)]
   7.0%   100.0%       0.589s       2.36e-03s     C      250        1   Elemwise{Composite{[mul(scalar_sigmoid(i0), i1)]}}[(0, 0)]
   ... (remaining 0 Ops account for   0.00%(0.00s) of the runtime)

Apply
------
<% time> <sum %> <apply time> <time per call> <#call> <id> <Apply name>
  25.6%    25.6%       2.155s       8.62e-03s    250     1   Gemm{no_inplace}(<TensorType(float64, matrix)>, TensorConstant{1.0}, <TensorType(float64, matrix)>, G_rec_copy, TensorConstant{1.0})
  25.2%    50.8%       2.129s       8.51e-03s    250     0   Gemm{no_inplace}(<TensorType(float64, matrix)>, TensorConstant{1.0}, <TensorType(float64, matrix)>, R_rec_copy, TensorConstant{1.0})
  25.1%    75.9%       2.114s       8.46e-03s    250     3   Gemm{no_inplace}(<TensorType(float64, matrix)>, TensorConstant{1.0}, Elemwise{Composite{[mul(scalar_sigmoid(i0), i1)]}}[(0, 0)].0, W_rec_copy, TensorConstant{1.0})
  17.2%    93.0%       1.447s       5.79e-03s    250     4   Elemwise{Composite{[add(mul(i0, add(mul(*1 -> scalar_sigmoid(i1), tanh(i2)), mul(sub(i3, *1), i4))), mul(i5, i4))]}}[(0, 1)](<TensorType(float64, col)>, Gemm{no_inplace}.0, Gemm{no_inplace}.0, TensorConstant{(1, 1) of 1.0}, <TensorType(float64, matrix)>, <TensorType(float64, col)>)
   7.0%   100.0%       0.589s       2.36e-03s    250     2   Elemwise{Composite{[mul(scalar_sigmoid(i0), i1)]}}[(0, 0)](Gemm{no_inplace}.0, <TensorType(float64, matrix)>)
   ... (remaining 0 Apply instances account for 0.00%(0.00s) of the runtime)


Scan Op profiling ( grad_of_layer_rec )
==================
  Message: None
  Time in 5 calls of the op (for a total of 250 steps) 2.269718e+01s

  Total time spent in calling the VM 2.185576e+01s (96.293%)
  Total overhead (computing slices..) 8.414195e-01s (3.707%)

Class
---
<% time> <sum %> <apply time> <time per call> <type> <#call> <#apply> <Class name>
  70.4%    70.4%      15.366s       8.78e-03s     C     1750       7   theano.tensor.blas.Gemm
  19.9%    90.2%       4.333s       8.67e-03s     C      500       2   theano.tensor.blas.Dot22
   9.7%   100.0%       2.128s       9.46e-04s     C     2250       9   theano.tensor.elemwise.Elemwise
   0.0%   100.0%       0.001s       5.33e-06s     C      250       1   theano.tensor.elemwise.DimShuffle
   ... (remaining 0 Classes account for   0.00%(0.00s) of the runtime)

Ops
---
<% time> <sum %> <apply time> <time per call> <type> <#call> <#apply> <Op name>
  60.6%    60.6%      13.218s       8.81e-03s     C     1500        6   Gemm{no_inplace}
  19.9%    80.4%       4.333s       8.67e-03s     C      500        2   Dot22
   9.8%    90.2%       2.148s       8.59e-03s     C      250        1   Gemm{inplace}
   5.4%    95.6%       1.176s       2.35e-03s     C      500        2   Elemwise{ScalarSigmoid}[(0, 0)]
   2.9%    98.6%       0.640s       2.56e-03s     C      250        1   Elemwise{Tanh}[(0, 0)]
   0.4%    98.9%       0.081s       3.23e-04s     C      250        1   Elemwise{Composite{[add(mul(i0, i1), mul(i2, i3, i4), mul(i3, i5), i6, i7)]}}[(0, 0)]
   0.4%    99.3%       0.077s       3.08e-04s     C      250        1   Elemwise{Composite{[mul(i0, add(mul(i1, i2, i3), neg(mul(i4, i2, i3))), i5)]}}
   0.2%    99.5%       0.052s       2.08e-04s     C      250        1   Elemwise{Composite{[mul(sub(i0, sqr(i1)), i2, i3, i4)]}}[(0, 1)]
   0.2%    99.7%       0.043s       1.73e-04s     C      250        1   Elemwise{Composite{[mul(sub(i0, i1), i1, i2, i3)]}}
   0.2%    99.9%       0.038s       1.51e-04s     C      250        1   Elemwise{mul,no_inplace}
   0.1%   100.0%       0.021s       8.32e-05s     C      250        1   Elemwise{sub}
   0.0%   100.0%       0.001s       5.33e-06s     C      250        1   InplaceDimShuffle{1,0}
   ... (remaining 0 Ops account for   0.00%(0.00s) of the runtime)

Apply
------
<% time> <sum %> <apply time> <time per call> <#call> <id> <Apply name>
  10.5%    10.5%       2.286s       9.14e-03s    250    13   Gemm{no_inplace}(<TensorType(float64, matrix)>, TensorConstant{1.0}, InplaceDimShuffle{1,0}.0, Elemwise{Composite{[mul(sub(i0, sqr(i1)), i2, i3, i4)]}}[(0, 1)].0, TensorConstant{1.0})
  10.3%    20.7%       2.238s       8.95e-03s    250    11   Gemm{no_inplace}(<TensorType(float64, matrix)>, TensorConstant{1.0}, <TensorType(float64, matrix)>, Elemwise{Composite{[mul(i0, add(mul(i1, i2, i3), neg(mul(i4, i2, i3))), i5)]}}.0, TensorConstant{1.0})
  10.2%    31.0%       2.236s       8.95e-03s    250    16   Gemm{no_inplace}(<TensorType(float64, matrix)>, TensorConstant{1.0}, <TensorType(float64, matrix)>, Elemwise{Composite{[mul(sub(i0, i1), i1, i2, i3)]}}.0, TensorConstant{1.0})
   9.9%    40.9%       2.172s       8.69e-03s    250    12   Dot22(Elemwise{Composite{[mul(i0, add(mul(i1, i2, i3), neg(mul(i4, i2, i3))), i5)]}}.0, G_rec_copy.T_replace)
   9.9%    50.8%       2.165s       8.66e-03s    250     0   Gemm{no_inplace}(<TensorType(float64, matrix)>, TensorConstant{1.0}, <TensorType(float64, matrix)>, G_rec_copy, TensorConstant{1.0})
   9.9%    60.7%       2.161s       8.65e-03s    250    14   Dot22(Elemwise{Composite{[mul(sub(i0, sqr(i1)), i2, i3, i4)]}}[(0, 1)].0, W_rec_copy.T_replace)
   9.9%    70.6%       2.159s       8.63e-03s    250     1   Gemm{no_inplace}(<TensorType(float64, matrix)>, TensorConstant{1.0}, <TensorType(float64, matrix)>, R_rec_copy, TensorConstant{1.0})
   9.8%    80.5%       2.148s       8.59e-03s    250    17   Gemm{inplace}(Dot22.0, TensorConstant{1.0}, Elemwise{Composite{[mul(sub(i0, i1), i1, i2, i3)]}}.0, R_rec_copy.T_replace, TensorConstant{1.0})
   9.8%    90.2%       2.135s       8.54e-03s    250     6   Gemm{no_inplace}(<TensorType(float64, matrix)>, TensorConstant{1.0}, Elemwise{mul,no_inplace}.0, W_rec_copy, TensorConstant{1.0})
   2.9%    93.2%       0.640s       2.56e-03s    250     8   Elemwise{Tanh}[(0, 0)](Gemm{no_inplace}.0)
   2.7%    95.9%       0.589s       2.36e-03s    250     3   Elemwise{ScalarSigmoid}[(0, 0)](Gemm{no_inplace}.0)
   2.7%    98.6%       0.587s       2.35e-03s    250     2   Elemwise{ScalarSigmoid}[(0, 0)](Gemm{no_inplace}.0)
   0.4%    98.9%       0.081s       3.23e-04s    250    18   Elemwise{Composite{[add(mul(i0, i1), mul(i2, i3, i4), mul(i3, i5), i6, i7)]}}[(0, 0)](Dot22.0, Elemwise{ScalarSigmoid}[(0, 0)].0, Elemwise{sub}.0, <TensorType(float64, matrix)>, <TensorType(float64, col)>, <TensorType(float64, col)>, <TensorType(float64, matrix)>, Gemm{inplace}.0)
   0.4%    99.3%       0.077s       3.08e-04s    250     9   Elemwise{Composite{[mul(i0, add(mul(i1, i2, i3), neg(mul(i4, i2, i3))), i5)]}}(Elemwise{sub}.0, Elemwise{Tanh}[(0, 0)].0, <TensorType(float64, matrix)>, <TensorType(float64, col)>, <TensorType(float64, matrix)>, Elemwise{ScalarSigmoid}[(0, 0)].0)
   0.2%    99.5%       0.052s       2.08e-04s    250    10   Elemwise{Composite{[mul(sub(i0, sqr(i1)), i2, i3, i4)]}}[(0, 1)](TensorConstant{(1, 1) of 1.0}, Elemwise{Tanh}[(0, 0)].0, Elemwise{ScalarSigmoid}[(0, 0)].0, <TensorType(float64, matrix)>, <TensorType(float64, col)>)
   0.2%    99.7%       0.043s       1.73e-04s    250    15   Elemwise{Composite{[mul(sub(i0, i1), i1, i2, i3)]}}(TensorConstant{(1, 1) of 1.0}, Elemwise{ScalarSigmoid}[(0, 0)].0, Dot22.0, <TensorType(float64, matrix)>)
   0.2%    99.9%       0.038s       1.51e-04s    250     5   Elemwise{mul,no_inplace}(Elemwise{ScalarSigmoid}[(0, 0)].0, <TensorType(float64, matrix)>)
   0.1%   100.0%       0.021s       8.32e-05s    250     4   Elemwise{sub}(TensorConstant{(1, 1) of 1.0}, Elemwise{ScalarSigmoid}[(0, 0)].0)
   0.0%   100.0%       0.001s       5.33e-06s    250     7   InplaceDimShuffle{1,0}(Elemwise{mul,no_inplace}.0)
   ... (remaining 0 Apply instances account for 0.00%(0.00s) of the runtime)

