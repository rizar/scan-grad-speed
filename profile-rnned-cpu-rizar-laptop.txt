/home/rizar/Dist/theano/theano/scan_module/scan_perform_ext.py:117: RuntimeWarning: numpy.ndarray size changed, may indicate binary incompatibility
  from scan_perform.scan_perform import *
Function profiling
==================
  Message: ./demo.py:61
  Time in 5 calls to Function.__call__: 3.434313e+01s
  Time in Function.fn.__call__: 3.422431e+01s (99.654%)
  Time in thunks: 3.422359e+01s (99.652%)
  Total compile time: 3.360288e+00s
    Number of Apply nodes: 54
    Theano Optimizer time: 2.814722e+00s
       Theano validate time: 1.567554e-02s
    Theano Linker time (includes C, CUDA code generation/compiling): 5.348258e-01s

Class
---
<% time> <sum %> <apply time> <time per call> <type> <#call> <#apply> <Class name>
  99.6%    99.6%      34.087s       3.41e+00s     Py      10       2   theano.scan_module.scan_op.Scan
   0.3%    99.9%       0.096s       3.86e-03s     C       25       5   theano.tensor.basic.Alloc
   0.1%   100.0%       0.039s       3.91e-03s     C       10       2   theano.tensor.subtensor.IncSubtensor
   0.0%   100.0%       0.000s       4.07e-06s     C       60      12   theano.tensor.elemwise.Elemwise
   0.0%   100.0%       0.000s       3.26e-06s     C       50      10   theano.tensor.subtensor.Subtensor
   0.0%   100.0%       0.000s       3.15e-06s     C       35       7   theano.compile.ops.Shape_i
   0.0%   100.0%       0.000s       2.80e-06s     C       30       6   theano.tensor.elemwise.DimShuffle
   0.0%   100.0%       0.000s       1.99e-06s     C       15       3   theano.tensor.basic.Reshape
   0.0%   100.0%       0.000s       1.38e-06s     C       20       4   theano.tensor.basic.ScalarFromTensor
   0.0%   100.0%       0.000s       1.26e-06s     C       15       3   theano.compile.ops.Rebroadcast
   ... (remaining 0 Classes account for   0.00%(0.00s) of the runtime)

Ops
---
<% time> <sum %> <apply time> <time per call> <type> <#call> <#apply> <Op name>
  73.1%    73.1%      25.033s       5.01e+00s     Py       5        1   forall_inplace,cpu,grad_of_layer_rec}
  26.5%    99.6%       9.054s       1.81e+00s     Py       5        1   for{cpu,layer_rec}
   0.3%    99.9%       0.096s       3.86e-03s     C       25        5   Alloc
   0.1%   100.0%       0.038s       7.66e-03s     C        5        1   IncSubtensor{InplaceInc;int64::}
   0.0%   100.0%       0.001s       1.64e-04s     C        5        1   IncSubtensor{InplaceInc;int64}
   0.0%   100.0%       0.000s       9.28e-06s     C       15        3   Elemwise{sub,no_inplace}
   0.0%   100.0%       0.000s       3.55e-06s     C       20        4   Shape_i{0}
   0.0%   100.0%       0.000s       2.79e-06s     C       25        5   Subtensor{int64:int64:int64}
   0.0%   100.0%       0.000s       3.94e-06s     C       15        3   InplaceDimShuffle{1,0}
   0.0%   100.0%       0.000s       2.62e-06s     C       15        3   Shape_i{1}
   0.0%   100.0%       0.000s       7.68e-06s     C        5        1   Subtensor{::int64}
   0.0%   100.0%       0.000s       1.99e-06s     C       15        3   Reshape{3}
   0.0%   100.0%       0.000s       1.92e-06s     C       15        3   Subtensor{int64}
   0.0%   100.0%       0.000s       1.38e-06s     C       20        4   ScalarFromTensor
   0.0%   100.0%       0.000s       5.15e-06s     C        5        1   Subtensor{int64:int64:int8}
   0.0%   100.0%       0.000s       1.26e-06s     C       15        3   Rebroadcast{0}
   0.0%   100.0%       0.000s       3.43e-06s     C        5        1   Elemwise{Composite{[Switch(LT(*1 -> Composite{[Switch(LT(i0, i1), i1, i0)]}(Composite{[Switch(LT(i0, i1), i2, i0)]}(Composite{[sub(i0, Switch(LT(i1, i2), i2, i1))]}(i0, Composite{[add(i0, int_div(i1, i0))]}(i1, *2 -> add(i2, i0)), i3), i3, *2), i3), i4), *1, i4)]}}
   0.0%   100.0%       0.000s       1.69e-06s     C       10        2   InplaceDimShuffle{0,1,x}
   0.0%   100.0%       0.000s       2.96e-06s     C        5        1   Elemwise{Composite{[Switch(LT(i0, i1), i1, i0)]}}
   0.0%   100.0%       0.000s       1.48e-06s     C       10        2   Elemwise{le,no_inplace}
   ... (remaining 6 Ops account for   0.00%(0.00s) of the runtime)

Apply
------
<% time> <sum %> <apply time> <time per call> <#call> <id> <Apply name>
  73.1%    73.1%      25.033s       5.01e+00s      5    50   forall_inplace,cpu,grad_of_layer_rec}(TensorConstant{50}, InplaceDimShuffle{0,2,1}.0, InplaceDimShuffle{0,1,x}.0, Elemwise{sub,no_inplace}.0, Subtensor{int64:int64:int64}.0, Subtensor{int64:int64:int64}.0, Subtensor{int64:int64:int64}.0, Subtensor{int64:int64:int64}.0, Subtensor{::int64}.0, Rebroadcast{0}.0, Rebroadcast{0}.0, Rebroadcast{0}.0, G_rec, R_rec, W_rec, InplaceDimShuffle{1,0}.0, InplaceDimShuffle{1,0}.0, InplaceDimShuffle{1,0}.0)
  26.5%    99.6%       9.054s       1.81e+00s      5    47   for{cpu,layer_rec}(TensorConstant{50}, InplaceDimShuffle{0,1,x}.0, Elemwise{sub,no_inplace}.0, Reshape{3}.0, Reshape{3}.0, Reshape{3}.0, TensorConstant{(51, 80, 1..00) of 0.0}, G_rec, R_rec, W_rec)
   0.1%    99.7%       0.040s       7.92e-03s      5     9   Alloc(TensorConstant{(1, 1, 1) of 0.0}, TensorConstant{50}, TensorConstant{80}, TensorConstant{1000})
   0.1%    99.8%       0.038s       7.66e-03s      5    26   IncSubtensor{InplaceInc;int64::}(Alloc.0, IncSubtensor{InplaceInc;int64}.0, Constant{1})
   0.1%    99.9%       0.036s       7.13e-03s      5    10   Alloc(TensorConstant{(1, 1, 1) of 0.0}, TensorConstant{51}, TensorConstant{80}, TensorConstant{1000})
   0.0%   100.0%       0.008s       1.66e-03s      5    15   Alloc(TensorConstant{0.0}, TensorConstant{1}, Shape_i{0}.0, Shape_i{1}.0)
   0.0%   100.0%       0.007s       1.37e-03s      5    17   Alloc(TensorConstant{0.0}, TensorConstant{1}, Shape_i{0}.0, Shape_i{1}.0)
   0.0%   100.0%       0.006s       1.22e-03s      5    16   Alloc(TensorConstant{0.0}, TensorConstant{1}, Shape_i{0}.0, Shape_i{1}.0)
   0.0%   100.0%       0.001s       1.64e-04s      5    18   IncSubtensor{InplaceInc;int64}(Alloc.0, TensorConstant{(80, 1000) of 1.0}, Constant{-1})
   0.0%   100.0%       0.000s       1.34e-05s      5    46   Elemwise{sub,no_inplace}(TensorConstant{(1, 1, 1) of 1.0}, InplaceDimShuffle{0,1,x}.0)
   0.0%   100.0%       0.000s       1.27e-05s      5    45   Elemwise{sub,no_inplace}(TensorConstant{(1, 1, 1) of 1.0}, InplaceDimShuffle{0,1,x}.0)
   0.0%   100.0%       0.000s       7.68e-06s      5    29   Subtensor{::int64}(IncSubtensor{InplaceInc;int64::}.0, Constant{-1})
   0.0%   100.0%       0.000s       6.39e-06s      5     6   InplaceDimShuffle{1,0}(R_rec)
   0.0%   100.0%       0.000s       5.82e-06s      5    48   Subtensor{int64:int64:int64}(for{cpu,layer_rec}.0, Constant{49}, Constant{-52}, Constant{-1})
   0.0%   100.0%       0.000s       5.15e-06s      5    42   Subtensor{int64:int64:int8}(mask, ScalarFromTensor.0, ScalarFromTensor.0, Constant{1})
   0.0%   100.0%       0.000s       5.01e-06s      5     8   Shape_i{0}(R_rec)
   0.0%   100.0%       0.000s       3.77e-06s      5    53   Subtensor{int64}(forall_inplace,cpu,grad_of_layer_rec}.3, Constant{0})
   0.0%   100.0%       0.000s       3.58e-06s      5     7   Shape_i{1}(R_rec)
   0.0%   100.0%       0.000s       3.43e-06s      5    30   Elemwise{Composite{[Switch(LT(*1 -> Composite{[Switch(LT(i0, i1), i1, i0)]}(Composite{[Switch(LT(i0, i1), i2, i0)]}(Composite{[sub(i0, Switch(LT(i1, i2), i2, i1))]}(i0, Composite{[add(i0, int_div(i1, i0))]}(i1, *2 -> add(i2, i0)), i3), i3, *2), i3), i4), *1, i4)]}}(Elemwise{Composite{[Switch(LT(i0, i1), i0, i1)]}}.0, TensorConstant{1}, TensorConstant{-1}, TensorConstant{0}, Elemwise{Composite{[Switch(LT(i0, i1), i1, i0)]}}.0)
   0.0%   100.0%       0.000s       3.39e-06s      5     5   Shape_i{0}(G_rec)
   ... (remaining 34 Apply instances account for 0.00%(0.00s) of the runtime)


Scan Op profiling ( layer_rec )
==================
  Message: None
  Time in 5 calls of the op (for a total of 250 steps) 9.053598e+00s

  Total time spent in calling the VM 8.968419e+00s (99.059%)
  Total overhead (computing slices..) 8.517909e-02s (0.941%)

Class
---
<% time> <sum %> <apply time> <time per call> <type> <#call> <#apply> <Class name>
  76.4%    76.4%       6.848s       9.13e-03s     C      750       3   theano.tensor.blas.Gemm
  23.6%   100.0%       2.110s       4.22e-03s     C      500       2   theano.tensor.elemwise.Elemwise
   ... (remaining 0 Classes account for   0.00%(0.00s) of the runtime)

Ops
---
<% time> <sum %> <apply time> <time per call> <type> <#call> <#apply> <Op name>
  76.4%    76.4%       6.848s       9.13e-03s     C      750        3   Gemm{no_inplace}
  16.7%    93.2%       1.500s       6.00e-03s     C      250        1   Elemwise{Composite{[add(mul(i0, add(mul(*1 -> scalar_sigmoid(i1), tanh(i2)), mul(sub(i3, *1), i4))), mul(i5, i4))]}}[(0, 1)]
   6.8%   100.0%       0.610s       2.44e-03s     C      250        1   Elemwise{Composite{[mul(scalar_sigmoid(i0), i1)]}}[(0, 0)]
   ... (remaining 0 Ops account for   0.00%(0.00s) of the runtime)

Apply
------
<% time> <sum %> <apply time> <time per call> <#call> <id> <Apply name>
  26.1%    26.1%       2.336s       9.34e-03s    250     1   Gemm{no_inplace}(<TensorType(float64, matrix)>, TensorConstant{1.0}, <TensorType(float64, matrix)>, G_rec_copy, TensorConstant{1.0})
  25.3%    51.4%       2.264s       9.06e-03s    250     3   Gemm{no_inplace}(<TensorType(float64, matrix)>, TensorConstant{1.0}, Elemwise{Composite{[mul(scalar_sigmoid(i0), i1)]}}[(0, 0)].0, W_rec_copy, TensorConstant{1.0})
  25.1%    76.4%       2.248s       8.99e-03s    250     0   Gemm{no_inplace}(<TensorType(float64, matrix)>, TensorConstant{1.0}, <TensorType(float64, matrix)>, R_rec_copy, TensorConstant{1.0})
  16.7%    93.2%       1.500s       6.00e-03s    250     4   Elemwise{Composite{[add(mul(i0, add(mul(*1 -> scalar_sigmoid(i1), tanh(i2)), mul(sub(i3, *1), i4))), mul(i5, i4))]}}[(0, 1)](<TensorType(float64, col)>, Gemm{no_inplace}.0, Gemm{no_inplace}.0, TensorConstant{(1, 1) of 1.0}, <TensorType(float64, matrix)>, <TensorType(float64, col)>)
   6.8%   100.0%       0.610s       2.44e-03s    250     2   Elemwise{Composite{[mul(scalar_sigmoid(i0), i1)]}}[(0, 0)](Gemm{no_inplace}.0, <TensorType(float64, matrix)>)
   ... (remaining 0 Apply instances account for 0.00%(0.00s) of the runtime)


Scan Op profiling ( grad_of_layer_rec )
==================
  Message: None
  Time in 5 calls of the op (for a total of 250 steps) 2.503239e+01s

  Total time spent in calling the VM 2.402736e+01s (95.985%)
  Total overhead (computing slices..) 1.005032e+00s (4.015%)

Class
---
<% time> <sum %> <apply time> <time per call> <type> <#call> <#apply> <Class name>
  70.4%    70.4%      16.886s       9.65e-03s     C     1750       7   theano.tensor.blas.Gemm
  20.0%    90.3%       4.787s       9.57e-03s     C      500       2   theano.tensor.blas.Dot22
   9.7%   100.0%       2.321s       1.03e-03s     C     2250       9   theano.tensor.elemwise.Elemwise
   0.0%   100.0%       0.002s       6.11e-06s     C      250       1   theano.tensor.elemwise.DimShuffle
   ... (remaining 0 Classes account for   0.00%(0.00s) of the runtime)

Ops
---
<% time> <sum %> <apply time> <time per call> <type> <#call> <#apply> <Op name>
  60.6%    60.6%      14.548s       9.70e-03s     C     1500        6   Gemm{no_inplace}
  20.0%    80.6%       4.787s       9.57e-03s     C      500        2   Dot22
   9.7%    90.3%       2.338s       9.35e-03s     C      250        1   Gemm{inplace}
   5.2%    95.5%       1.250s       2.50e-03s     C      500        2   Elemwise{ScalarSigmoid}[(0, 0)]
   2.8%    98.4%       0.681s       2.72e-03s     C      250        1   Elemwise{Tanh}[(0, 0)]
   0.4%    98.8%       0.102s       4.07e-04s     C      250        1   Elemwise{Composite{[add(mul(i0, i1), mul(i2, i3, i4), mul(i3, i5), i6, i7)]}}[(0, 0)]
   0.4%    99.2%       0.095s       3.80e-04s     C      250        1   Elemwise{Composite{[mul(i0, add(mul(i1, i2, i3), neg(mul(i4, i2, i3))), i5)]}}
   0.2%    99.4%       0.058s       2.30e-04s     C      250        1   Elemwise{Composite{[mul(sub(i0, i1), i1, i2, i3)]}}
   0.2%    99.7%       0.057s       2.28e-04s     C      250        1   Elemwise{Composite{[mul(sub(i0, sqr(i1)), i2, i3, i4)]}}[(0, 1)]
   0.2%    99.9%       0.050s       2.00e-04s     C      250        1   Elemwise{mul,no_inplace}
   0.1%   100.0%       0.029s       1.17e-04s     C      250        1   Elemwise{sub}
   0.0%   100.0%       0.002s       6.11e-06s     C      250        1   InplaceDimShuffle{1,0}
   ... (remaining 0 Ops account for   0.00%(0.00s) of the runtime)

Apply
------
<% time> <sum %> <apply time> <time per call> <#call> <id> <Apply name>
  10.4%    10.4%       2.489s       9.96e-03s    250    16   Gemm{no_inplace}(<TensorType(float64, matrix)>, TensorConstant{1.0}, <TensorType(float64, matrix)>, Elemwise{Composite{[mul(sub(i0, i1), i1, i2, i3)]}}.0, TensorConstant{1.0})
  10.4%    20.7%       2.485s       9.94e-03s    250    11   Gemm{no_inplace}(<TensorType(float64, matrix)>, TensorConstant{1.0}, <TensorType(float64, matrix)>, Elemwise{Composite{[mul(i0, add(mul(i1, i2, i3), neg(mul(i4, i2, i3))), i5)]}}.0, TensorConstant{1.0})
  10.2%    30.9%       2.445s       9.78e-03s    250    13   Gemm{no_inplace}(<TensorType(float64, matrix)>, TensorConstant{1.0}, InplaceDimShuffle{1,0}.0, Elemwise{Composite{[mul(sub(i0, sqr(i1)), i2, i3, i4)]}}[(0, 1)].0, TensorConstant{1.0})
  10.1%    41.0%       2.429s       9.72e-03s    250    12   Dot22(Elemwise{Composite{[mul(i0, add(mul(i1, i2, i3), neg(mul(i4, i2, i3))), i5)]}}.0, G_rec_copy.T_replace)
  10.0%    51.0%       2.396s       9.58e-03s    250     0   Gemm{no_inplace}(<TensorType(float64, matrix)>, TensorConstant{1.0}, <TensorType(float64, matrix)>, G_rec_copy, TensorConstant{1.0})
   9.9%    60.9%       2.369s       9.47e-03s    250     1   Gemm{no_inplace}(<TensorType(float64, matrix)>, TensorConstant{1.0}, <TensorType(float64, matrix)>, R_rec_copy, TensorConstant{1.0})
   9.9%    70.8%       2.365s       9.46e-03s    250     6   Gemm{no_inplace}(<TensorType(float64, matrix)>, TensorConstant{1.0}, Elemwise{mul,no_inplace}.0, W_rec_copy, TensorConstant{1.0})
   9.8%    80.6%       2.358s       9.43e-03s    250    14   Dot22(Elemwise{Composite{[mul(sub(i0, sqr(i1)), i2, i3, i4)]}}[(0, 1)].0, W_rec_copy.T_replace)
   9.7%    90.3%       2.338s       9.35e-03s    250    17   Gemm{inplace}(Dot22.0, TensorConstant{1.0}, Elemwise{Composite{[mul(sub(i0, i1), i1, i2, i3)]}}.0, R_rec_copy.T_replace, TensorConstant{1.0})
   2.8%    93.2%       0.681s       2.72e-03s    250     8   Elemwise{Tanh}[(0, 0)](Gemm{no_inplace}.0)
   2.6%    95.8%       0.626s       2.51e-03s    250     2   Elemwise{ScalarSigmoid}[(0, 0)](Gemm{no_inplace}.0)
   2.6%    98.4%       0.624s       2.49e-03s    250     3   Elemwise{ScalarSigmoid}[(0, 0)](Gemm{no_inplace}.0)
   0.4%    98.8%       0.102s       4.07e-04s    250    18   Elemwise{Composite{[add(mul(i0, i1), mul(i2, i3, i4), mul(i3, i5), i6, i7)]}}[(0, 0)](Dot22.0, Elemwise{ScalarSigmoid}[(0, 0)].0, Elemwise{sub}.0, <TensorType(float64, matrix)>, <TensorType(float64, col)>, <TensorType(float64, col)>, <TensorType(float64, matrix)>, Gemm{inplace}.0)
   0.4%    99.2%       0.095s       3.80e-04s    250     9   Elemwise{Composite{[mul(i0, add(mul(i1, i2, i3), neg(mul(i4, i2, i3))), i5)]}}(Elemwise{sub}.0, Elemwise{Tanh}[(0, 0)].0, <TensorType(float64, matrix)>, <TensorType(float64, col)>, <TensorType(float64, matrix)>, Elemwise{ScalarSigmoid}[(0, 0)].0)
   0.2%    99.4%       0.058s       2.30e-04s    250    15   Elemwise{Composite{[mul(sub(i0, i1), i1, i2, i3)]}}(TensorConstant{(1, 1) of 1.0}, Elemwise{ScalarSigmoid}[(0, 0)].0, Dot22.0, <TensorType(float64, matrix)>)
   0.2%    99.7%       0.057s       2.28e-04s    250    10   Elemwise{Composite{[mul(sub(i0, sqr(i1)), i2, i3, i4)]}}[(0, 1)](TensorConstant{(1, 1) of 1.0}, Elemwise{Tanh}[(0, 0)].0, Elemwise{ScalarSigmoid}[(0, 0)].0, <TensorType(float64, matrix)>, <TensorType(float64, col)>)
   0.2%    99.9%       0.050s       2.00e-04s    250     5   Elemwise{mul,no_inplace}(Elemwise{ScalarSigmoid}[(0, 0)].0, <TensorType(float64, matrix)>)
   0.1%   100.0%       0.029s       1.17e-04s    250     4   Elemwise{sub}(TensorConstant{(1, 1) of 1.0}, Elemwise{ScalarSigmoid}[(0, 0)].0)
   0.0%   100.0%       0.002s       6.11e-06s    250     7   InplaceDimShuffle{1,0}(Elemwise{mul,no_inplace}.0)
   ... (remaining 0 Apply instances account for 0.00%(0.00s) of the runtime)

