/u/bahdanau/Dist/theano/theano/scan_module/scan_perform_ext.py:117: RuntimeWarning: numpy.ndarray size changed, may indicate binary incompatibility
  from scan_perform.scan_perform import *
Function profiling
==================
  Message: ./demo.py:61
  Time in 5 calls to Function.__call__: 2.928324e+01s
  Time in Function.fn.__call__: 2.928291e+01s (99.999%)
  Time in thunks: 2.928234e+01s (99.997%)
  Total compile time: 3.661570e+00s
    Number of Apply nodes: 54
    Theano Optimizer time: 3.233251e+00s
       Theano validate time: 1.807523e-02s
    Theano Linker time (includes C, CUDA code generation/compiling): 4.153390e-01s

Class
---
<% time> <sum %> <apply time> <time per call> <type> <#call> <#apply> <Class name>
  99.8%    99.8%      29.228s       2.92e+00s     Py      10       2   theano.scan_module.scan_op.Scan
   0.1%   100.0%       0.043s       1.70e-03s     C       25       5   theano.tensor.basic.Alloc
   0.0%   100.0%       0.011s       1.12e-03s     C       10       2   theano.tensor.subtensor.IncSubtensor
   0.0%   100.0%       0.000s       3.02e-06s     C       60      12   theano.tensor.elemwise.Elemwise
   0.0%   100.0%       0.000s       2.80e-06s     C       50      10   theano.tensor.subtensor.Subtensor
   0.0%   100.0%       0.000s       2.45e-06s     C       30       6   theano.tensor.elemwise.DimShuffle
   0.0%   100.0%       0.000s       1.96e-06s     C       35       7   theano.compile.ops.Shape_i
   0.0%   100.0%       0.000s       1.35e-06s     C       20       4   theano.tensor.basic.ScalarFromTensor
   0.0%   100.0%       0.000s       1.68e-06s     C       15       3   theano.tensor.basic.Reshape
   0.0%   100.0%       0.000s       1.08e-06s     C       15       3   theano.compile.ops.Rebroadcast
   ... (remaining 0 Classes account for   0.00%(0.00s) of the runtime)

Ops
---
<% time> <sum %> <apply time> <time per call> <type> <#call> <#apply> <Op name>
  65.7%    65.7%      19.236s       3.85e+00s     Py       5        1   forall_inplace,cpu,grad_of_layer_rec}
  34.1%    99.8%       9.993s       2.00e+00s     Py       5        1   for{cpu,layer_rec}
   0.1%   100.0%       0.043s       1.70e-03s     C       25        5   Alloc
   0.0%   100.0%       0.011s       2.18e-03s     C        5        1   IncSubtensor{InplaceInc;int64::}
   0.0%   100.0%       0.000s       5.92e-05s     C        5        1   IncSubtensor{InplaceInc;int64}
   0.0%   100.0%       0.000s       6.21e-06s     C       15        3   Elemwise{sub,no_inplace}
   0.0%   100.0%       0.000s       2.46e-06s     C       25        5   Subtensor{int64:int64:int64}
   0.0%   100.0%       0.000s       2.15e-06s     C       20        4   Shape_i{0}
   0.0%   100.0%       0.000s       2.13e-06s     C       15        3   InplaceDimShuffle{1,0}
   0.0%   100.0%       0.000s       6.15e-06s     C        5        1   Subtensor{::int64}
   0.0%   100.0%       0.000s       1.94e-06s     C       15        3   Subtensor{int64}
   0.0%   100.0%       0.000s       1.35e-06s     C       20        4   ScalarFromTensor
   0.0%   100.0%       0.000s       2.67e-06s     C       10        2   InplaceDimShuffle{0,1,x}
   0.0%   100.0%       0.000s       1.72e-06s     C       15        3   Shape_i{1}
   0.0%   100.0%       0.000s       1.68e-06s     C       15        3   Reshape{3}
   0.0%   100.0%       0.000s       3.77e-06s     C        5        1   Subtensor{int64:int64:int8}
   0.0%   100.0%       0.000s       1.08e-06s     C       15        3   Rebroadcast{0}
   0.0%   100.0%       0.000s       2.96e-06s     C        5        1   InplaceDimShuffle{0,2,1}
   0.0%   100.0%       0.000s       2.62e-06s     C        5        1   Elemwise{Composite{[Switch(LT(i0, i1), i0, i1)]}}
   0.0%   100.0%       0.000s       2.53e-06s     C        5        1   Elemwise{Composite{[Switch(LT(i0, i1), i1, i0)]}}
   ... (remaining 6 Ops account for   0.00%(0.00s) of the runtime)

Apply
------
<% time> <sum %> <apply time> <time per call> <#call> <id> <Apply name>
  65.7%    65.7%      19.236s       3.85e+00s      5    50   forall_inplace,cpu,grad_of_layer_rec}(TensorConstant{50}, InplaceDimShuffle{0,2,1}.0, InplaceDimShuffle{0,1,x}.0, Elemwise{sub,no_inplace}.0, Subtensor{int64:int64:int64}.0, Subtensor{int64:int64:int64}.0, Subtensor{int64:int64:int64}.0, Subtensor{int64:int64:int64}.0, Subtensor{::int64}.0, Rebroadcast{0}.0, Rebroadcast{0}.0, Rebroadcast{0}.0, G_rec, R_rec, W_rec, InplaceDimShuffle{1,0}.0, InplaceDimShuffle{1,0}.0, InplaceDimShuffle{1,0}.0)
  34.1%    99.8%       9.993s       2.00e+00s      5    47   for{cpu,layer_rec}(TensorConstant{50}, InplaceDimShuffle{0,1,x}.0, Elemwise{sub,no_inplace}.0, Reshape{3}.0, Reshape{3}.0, Reshape{3}.0, TensorConstant{(51, 80, 1..00) of 0.0}, G_rec, R_rec, W_rec)
   0.1%    99.9%       0.019s       3.84e-03s      5     9   Alloc(TensorConstant{(1, 1, 1) of 0.0}, TensorConstant{50}, TensorConstant{80}, TensorConstant{1000})
   0.1%    99.9%       0.017s       3.42e-03s      5    10   Alloc(TensorConstant{(1, 1, 1) of 0.0}, TensorConstant{51}, TensorConstant{80}, TensorConstant{1000})
   0.0%   100.0%       0.011s       2.18e-03s      5    26   IncSubtensor{InplaceInc;int64::}(Alloc.0, IncSubtensor{InplaceInc;int64}.0, Constant{1})
   0.0%   100.0%       0.002s       5.00e-04s      5    15   Alloc(TensorConstant{0.0}, TensorConstant{1}, Shape_i{0}.0, Shape_i{1}.0)
   0.0%   100.0%       0.002s       3.73e-04s      5    16   Alloc(TensorConstant{0.0}, TensorConstant{1}, Shape_i{0}.0, Shape_i{1}.0)
   0.0%   100.0%       0.002s       3.71e-04s      5    17   Alloc(TensorConstant{0.0}, TensorConstant{1}, Shape_i{0}.0, Shape_i{1}.0)
   0.0%   100.0%       0.000s       5.92e-05s      5    18   IncSubtensor{InplaceInc;int64}(Alloc.0, TensorConstant{(80, 1000) of 1.0}, Constant{-1})
   0.0%   100.0%       0.000s       8.96e-06s      5    45   Elemwise{sub,no_inplace}(TensorConstant{(1, 1, 1) of 1.0}, InplaceDimShuffle{0,1,x}.0)
   0.0%   100.0%       0.000s       7.39e-06s      5    46   Elemwise{sub,no_inplace}(TensorConstant{(1, 1, 1) of 1.0}, InplaceDimShuffle{0,1,x}.0)
   0.0%   100.0%       0.000s       6.15e-06s      5    29   Subtensor{::int64}(IncSubtensor{InplaceInc;int64::}.0, Constant{-1})
   0.0%   100.0%       0.000s       5.34e-06s      5    48   Subtensor{int64:int64:int64}(for{cpu,layer_rec}.0, Constant{49}, Constant{-52}, Constant{-1})
   0.0%   100.0%       0.000s       3.77e-06s      5    42   Subtensor{int64:int64:int8}(mask, ScalarFromTensor.0, ScalarFromTensor.0, Constant{1})
   0.0%   100.0%       0.000s       3.72e-06s      5    53   Subtensor{int64}(forall_inplace,cpu,grad_of_layer_rec}.3, Constant{0})
   0.0%   100.0%       0.000s       3.43e-06s      5     6   InplaceDimShuffle{1,0}(R_rec)
   0.0%   100.0%       0.000s       3.19e-06s      5     1   Shape_i{0}(W_rec)
   0.0%   100.0%       0.000s       3.05e-06s      5    43   InplaceDimShuffle{0,1,x}(Subtensor{int64:int64:int64}.0)
   0.0%   100.0%       0.000s       2.96e-06s      5    49   InplaceDimShuffle{0,2,1}(Subtensor{int64:int64:int64}.0)
   0.0%   100.0%       0.000s       2.86e-06s      5     5   Shape_i{0}(G_rec)
   ... (remaining 34 Apply instances account for 0.00%(0.00s) of the runtime)


Scan Op profiling ( layer_rec )
==================
  Message: None
  Time in 5 calls of the op (for a total of 250 steps) 9.992115e+00s

  Total time spent in calling the VM 9.950020e+00s (99.579%)
  Total overhead (computing slices..) 4.209542e-02s (0.421%)

Class
---
<% time> <sum %> <apply time> <time per call> <type> <#call> <#apply> <Class name>
  65.8%    65.8%       6.545s       1.31e-02s     C      500       2   theano.tensor.elemwise.Elemwise
  34.2%   100.0%       3.395s       4.53e-03s     C      750       3   theano.tensor.blas.Gemm
   ... (remaining 0 Classes account for   0.00%(0.00s) of the runtime)

Ops
---
<% time> <sum %> <apply time> <time per call> <type> <#call> <#apply> <Op name>
  49.1%    49.1%       4.878s       1.95e-02s     C      250        1   Elemwise{Composite{[add(mul(i0, add(mul(*1 -> scalar_sigmoid(i1), tanh(i2)), mul(sub(i3, *1), i4))), mul(i5, i4))]}}[(0, 1)]
  34.2%    83.2%       3.395s       4.53e-03s     C      750        3   Gemm{no_inplace}
  16.8%   100.0%       1.667s       6.67e-03s     C      250        1   Elemwise{Composite{[mul(scalar_sigmoid(i0), i1)]}}[(0, 0)]
   ... (remaining 0 Ops account for   0.00%(0.00s) of the runtime)

Apply
------
<% time> <sum %> <apply time> <time per call> <#call> <id> <Apply name>
  49.1%    49.1%       4.878s       1.95e-02s    250     4   Elemwise{Composite{[add(mul(i0, add(mul(*1 -> scalar_sigmoid(i1), tanh(i2)), mul(sub(i3, *1), i4))), mul(i5, i4))]}}[(0, 1)](<TensorType(float32, col)>, Gemm{no_inplace}.0, Gemm{no_inplace}.0, TensorConstant{(1, 1) of 1.0}, <TensorType(float32, matrix)>, <TensorType(float32, col)>)
  16.8%    65.8%       1.667s       6.67e-03s    250     2   Elemwise{Composite{[mul(scalar_sigmoid(i0), i1)]}}[(0, 0)](Gemm{no_inplace}.0, <TensorType(float32, matrix)>)
  11.7%    77.5%       1.163s       4.65e-03s    250     3   Gemm{no_inplace}(<TensorType(float32, matrix)>, TensorConstant{1.0}, Elemwise{Composite{[mul(scalar_sigmoid(i0), i1)]}}[(0, 0)].0, W_rec_copy, TensorConstant{1.0})
  11.4%    89.0%       1.135s       4.54e-03s    250     1   Gemm{no_inplace}(<TensorType(float32, matrix)>, TensorConstant{1.0}, <TensorType(float32, matrix)>, G_rec_copy, TensorConstant{1.0})
  11.0%   100.0%       1.096s       4.39e-03s    250     0   Gemm{no_inplace}(<TensorType(float32, matrix)>, TensorConstant{1.0}, <TensorType(float32, matrix)>, R_rec_copy, TensorConstant{1.0})
   ... (remaining 0 Apply instances account for 0.00%(0.00s) of the runtime)


Scan Op profiling ( grad_of_layer_rec )
==================
  Message: None
  Time in 5 calls of the op (for a total of 250 steps) 1.923480e+01s

  Total time spent in calling the VM 1.864264e+01s (96.921%)
  Total overhead (computing slices..) 5.921595e-01s (3.079%)

Class
---
<% time> <sum %> <apply time> <time per call> <type> <#call> <#apply> <Class name>
  44.3%    44.3%       8.249s       3.67e-03s     C     2250       9   theano.tensor.elemwise.Elemwise
  44.0%    88.3%       8.180s       4.67e-03s     C     1750       7   theano.tensor.blas.Gemm
  11.7%   100.0%       2.180s       4.36e-03s     C      500       2   theano.tensor.blas.Dot22
   0.0%   100.0%       0.001s       5.76e-06s     C      250       1   theano.tensor.elemwise.DimShuffle
   ... (remaining 0 Classes account for   0.00%(0.00s) of the runtime)

Ops
---
<% time> <sum %> <apply time> <time per call> <type> <#call> <#apply> <Op name>
  39.3%    39.3%       7.308s       4.87e-03s     C     1500        6   Gemm{no_inplace}
  26.8%    66.1%       4.993s       9.99e-03s     C      500        2   Elemwise{ScalarSigmoid}[(0, 0)]
  14.7%    80.8%       2.738s       1.10e-02s     C      250        1   Elemwise{Tanh}[(0, 0)]
  11.7%    92.5%       2.180s       4.36e-03s     C      500        2   Dot22
   4.7%    97.2%       0.872s       3.49e-03s     C      250        1   Gemm{inplace}
   0.9%    98.1%       0.168s       6.74e-04s     C      250        1   Elemwise{Composite{[add(mul(i0, i1), mul(i2, i3, i4), mul(i3, i5), i6, i7)]}}[(0, 0)]
   0.8%    98.9%       0.156s       6.22e-04s     C      250        1   Elemwise{Composite{[mul(i0, add(mul(i1, i2, i3), neg(mul(i4, i2, i3))), i5)]}}
   0.5%    99.4%       0.094s       3.76e-04s     C      250        1   Elemwise{Composite{[mul(sub(i0, sqr(i1)), i2, i3, i4)]}}[(0, 1)]
   0.3%    99.8%       0.065s       2.59e-04s     C      250        1   Elemwise{Composite{[mul(sub(i0, i1), i1, i2, i3)]}}
   0.1%    99.9%       0.019s       7.41e-05s     C      250        1   Elemwise{mul,no_inplace}
   0.1%   100.0%       0.018s       7.10e-05s     C      250        1   Elemwise{sub}
   0.0%   100.0%       0.001s       5.76e-06s     C      250        1   InplaceDimShuffle{1,0}
   ... (remaining 0 Ops account for   0.00%(0.00s) of the runtime)

Apply
------
<% time> <sum %> <apply time> <time per call> <#call> <id> <Apply name>
  14.7%    14.7%       2.738s       1.10e-02s    250     8   Elemwise{Tanh}[(0, 0)](Gemm{no_inplace}.0)
  14.5%    29.2%       2.705s       1.08e-02s    250     2   Elemwise{ScalarSigmoid}[(0, 0)](Gemm{no_inplace}.0)
  12.3%    41.5%       2.288s       9.15e-03s    250     3   Elemwise{ScalarSigmoid}[(0, 0)](Gemm{no_inplace}.0)
   7.7%    49.2%       1.424s       5.70e-03s    250     0   Gemm{no_inplace}(<TensorType(float32, matrix)>, TensorConstant{1.0}, <TensorType(float32, matrix)>, G_rec_copy, TensorConstant{1.0})
   6.7%    55.9%       1.244s       4.97e-03s    250    13   Gemm{no_inplace}(<TensorType(float32, matrix)>, TensorConstant{1.0}, InplaceDimShuffle{1,0}.0, Elemwise{Composite{[mul(sub(i0, sqr(i1)), i2, i3, i4)]}}[(0, 1)].0, TensorConstant{1.0})
   6.4%    62.3%       1.197s       4.79e-03s    250     6   Gemm{no_inplace}(<TensorType(float32, matrix)>, TensorConstant{1.0}, Elemwise{mul,no_inplace}.0, W_rec_copy, TensorConstant{1.0})
   6.4%    68.7%       1.194s       4.78e-03s    250    16   Gemm{no_inplace}(<TensorType(float32, matrix)>, TensorConstant{1.0}, <TensorType(float32, matrix)>, Elemwise{Composite{[mul(sub(i0, i1), i1, i2, i3)]}}.0, TensorConstant{1.0})
   6.2%    74.9%       1.152s       4.61e-03s    250    11   Gemm{no_inplace}(<TensorType(float32, matrix)>, TensorConstant{1.0}, <TensorType(float32, matrix)>, Elemwise{Composite{[mul(i0, add(mul(i1, i2, i3), neg(mul(i4, i2, i3))), i5)]}}.0, TensorConstant{1.0})
   5.9%    80.8%       1.097s       4.39e-03s    250     1   Gemm{no_inplace}(<TensorType(float32, matrix)>, TensorConstant{1.0}, <TensorType(float32, matrix)>, R_rec_copy, TensorConstant{1.0})
   5.9%    86.7%       1.091s       4.36e-03s    250    14   Dot22(Elemwise{Composite{[mul(sub(i0, sqr(i1)), i2, i3, i4)]}}[(0, 1)].0, W_rec_copy.T_replace)
   5.8%    92.5%       1.089s       4.35e-03s    250    12   Dot22(Elemwise{Composite{[mul(i0, add(mul(i1, i2, i3), neg(mul(i4, i2, i3))), i5)]}}.0, G_rec_copy.T_replace)
   4.7%    97.2%       0.872s       3.49e-03s    250    17   Gemm{inplace}(Dot22.0, TensorConstant{1.0}, Elemwise{Composite{[mul(sub(i0, i1), i1, i2, i3)]}}.0, R_rec_copy.T_replace, TensorConstant{1.0})
   0.9%    98.1%       0.168s       6.74e-04s    250    18   Elemwise{Composite{[add(mul(i0, i1), mul(i2, i3, i4), mul(i3, i5), i6, i7)]}}[(0, 0)](Dot22.0, Elemwise{ScalarSigmoid}[(0, 0)].0, Elemwise{sub}.0, <TensorType(float32, matrix)>, <TensorType(float32, col)>, <TensorType(float32, col)>, <TensorType(float32, matrix)>, Gemm{inplace}.0)
   0.8%    98.9%       0.156s       6.22e-04s    250     9   Elemwise{Composite{[mul(i0, add(mul(i1, i2, i3), neg(mul(i4, i2, i3))), i5)]}}(Elemwise{sub}.0, Elemwise{Tanh}[(0, 0)].0, <TensorType(float32, matrix)>, <TensorType(float32, col)>, <TensorType(float32, matrix)>, Elemwise{ScalarSigmoid}[(0, 0)].0)
   0.5%    99.4%       0.094s       3.76e-04s    250    10   Elemwise{Composite{[mul(sub(i0, sqr(i1)), i2, i3, i4)]}}[(0, 1)](TensorConstant{(1, 1) of 1.0}, Elemwise{Tanh}[(0, 0)].0, Elemwise{ScalarSigmoid}[(0, 0)].0, <TensorType(float32, matrix)>, <TensorType(float32, col)>)
   0.3%    99.8%       0.065s       2.59e-04s    250    15   Elemwise{Composite{[mul(sub(i0, i1), i1, i2, i3)]}}(TensorConstant{(1, 1) of 1.0}, Elemwise{ScalarSigmoid}[(0, 0)].0, Dot22.0, <TensorType(float32, matrix)>)
   0.1%    99.9%       0.019s       7.41e-05s    250     5   Elemwise{mul,no_inplace}(Elemwise{ScalarSigmoid}[(0, 0)].0, <TensorType(float32, matrix)>)
   0.1%   100.0%       0.018s       7.10e-05s    250     4   Elemwise{sub}(TensorConstant{(1, 1) of 1.0}, Elemwise{ScalarSigmoid}[(0, 0)].0)
   0.0%   100.0%       0.001s       5.76e-06s    250     7   InplaceDimShuffle{1,0}(Elemwise{mul,no_inplace}.0)
   ... (remaining 0 Apply instances account for 0.00%(0.00s) of the runtime)

